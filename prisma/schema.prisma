generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String         @id @default(uuid())
  email            String         @unique
  password         String
  name             String
  tenantId         String?
  role             Role
  resetToken       String?
  resetTokenExpiry DateTime?
  refreshTokens    RefreshToken[]
  tenant           Tenant?        @relation(fields: [tenantId], references: [id])
}

model RefreshToken {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Tenant {
  id        String      @id @default(uuid())
  name      String      @unique
  category  String      @default("General")
  createdAt DateTime    @default(now())
  updatedAt DateTime    @default(now()) @updatedAt
  customers Customer[]
  inventory Inventory[]
  invoice   Invoice[]
  taxation  Taxation[]
  users     User[]
}

model Customer {
  id       String    @id @default(uuid())
  name     String
  email    String    @unique
  tenantId String
  phone    String?
  tenant   Tenant    @relation(fields: [tenantId], references: [id])
  invoice  Invoice[]
}

model Inventory {
  id        String        @id @default(uuid())
  name      String
  price     Float
  stock     Int
  tenantId  String
  createdAt DateTime      @default(now())
  updatedAt DateTime      @default(now()) @updatedAt
  tenant    Tenant        @relation(fields: [tenantId], references: [id])
  invoice   InvoiceItem[]
}

model Taxation {
  id       String @id @default(uuid())
  taxRate  Float
  region   String
  tenantId String
  tenant   Tenant @relation(fields: [tenantId], references: [id])
}

model Invoice {
  id         String        @id @default(uuid())
  customerId String
  tenantId   String
  totalPrice Float
  totalTax   Float
  receiptNumber String       @unique // ðŸ”¥ Make sure it's unique
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @default(now())
  customer   Customer      @relation(fields: [customerId], references: [id])
  tenant     Tenant        @relation(fields: [tenantId], references: [id])
  items      InvoiceItem[]
}

model InvoiceItem {
  id         String    @id @default(uuid())
  invoiceId  String
  productId  String
  quantity   Int
  price      Float
  totalPrice Float
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @default(now()) @updatedAt
  invoice    Invoice   @relation(fields: [invoiceId], references: [id])
  product    Inventory @relation(fields: [productId], references: [id])
}

enum Role {
  SUPERADMIN
  ADMIN
  MANAGER
}
